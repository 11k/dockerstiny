index index.html index.php;

map $http_upgrade $connection_upgrade {
	default upgrade;
	'' close;
}

server {
    include domain.conf;

    listen 8081 ssl;
    server_name 127.0.0.1;
    root /www/www.destiny.gg/static;

    ssl_certificate /etc/nginx/certs/dgg.pem;
    ssl_certificate_key /etc/nginx/certs/dgg-key.pem;

    add_header X-XSS-Protection "1; mode=block";
    add_header Strict-Transport-Security "max-age=2700000; includeSubDomains; preload";
    include dgg_csp.conf;

    access_log /dev/stdout;
    error_log /dev/stdout;

    location ~* \.(svg|eot|ttf|woff\d?|json|wasm|webmanifest|otf)$ {
        add_header "Access-Control-Allow-Origin" "*";
        add_header "Access-Control-Allow-Methods" "GET";
    }

    rewrite ^/\d+\.\d+\.\d+/(.*)$ /$1;

    location ^~ /custom/ {
        root /www/www.destiny.gg;
        location ~ ^/\. {
            deny all;
        }

        expires 12h;
    }
    location ~ ^/\. { deny  all; }
    location ~* \.(avif|jpg|jpe?g|png|gif|ico|css|js|map|svg|eot|ttf|woff|woff2|wasm|otf)$ {
        expires 12h;
    }

    location / {
        rewrite .* "https://$domain:*:8080" permanent;
    }
}

server {
    include domain.conf;

    listen 8080 ssl;
    server_name 127.0.0.1;
    root /www/www.destiny.gg/public;

    ssl_certificate /etc/nginx/certs/dgg.pem;
    ssl_certificate_key /etc/nginx/certs/dgg-key.pem;

    access_log /dev/stdout;
    error_log /dev/stdout;

    error_page 403 /errors/403.html;
    error_page 404 /errors/404.html;
    error_page 500 /errors/500.html;
    error_page 503 /errors/503.html;

    location /ws {
        proxy_pass http://chat:1118;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection $connection_upgrade;
        proxy_set_header Host $host;
    }

    location /dggApi {
        proxy_pass http://live-ws:42069;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection $connection_upgrade;
        proxy_set_header Host $host;
    }

    # Allow `/.well-known` for custom Bluesky handle verification.
    location ~ ^/\.(?!well-known).* { deny all; }

    location ~* \.(avif|jpg|jpeg|png|gif|ico|css|js|map|svg)$ {
        expires 12h;
    }

    location / {
        try_files $uri $uri/ @phprewrite;
    }

    location @phprewrite {
        rewrite ^/.*$ /index.php;
    }

    location ~ \.php$ {
        if ($request_uri !~ "^/embed") {
            add_header X-Frame-Options "SAMEORIGIN";
            add_header X-XSS-Protection "1; mode=block";

            set $DEFAULT_SRC "default-src *";
            set $SCRIPT_SRC "script-src 'wasm-unsafe-eval' 'unsafe-inline' $domain:* https://apis.google.com www.google.com www.google-analytics.com https://ssl.google-analytics.com https://*.googlesyndication.com https://googleads.g.doubleclick.net https://*.gstatic.com";
            set $OBJECT_SRC "object-src 'none'";
            set $STYLE_SRC "style-src 'self' data: 'unsafe-inline' $domain:* fonts.googleapis.com";
            set $IMAGE_SRC "img-src * data: blob:";
            set $MEDIA_SRC "media-src *.live-video.net blob:";
            set $FRAME_SRC "frame-src 'self' player.kick.com kick.com *.vimeo.com rumble.com odysee.com *.facebook.com https://www.youtube.com youtube.com https://www.google.com www.twitch.tv clips.twitch.tv player.twitch.tv googleads.g.doubleclick.net player.kick.cx";

            set $FONT_SRC "font-src data: $domain:* fonts.googleapis.com fonts.gstatic.com";
            set $CONNECT_SRC "connect-src *";
            set $WORKER_SRC "worker-src blob:";

            add_header Content-Security-Policy "${DEFAULT_SRC}; ${SCRIPT_SRC}; ${OBJECT_SRC}; ${STYLE_SRC}; ${IMAGE_SRC}; ${MEDIA_SRC}; ${FRAME_SRC}; ${FONT_SRC}; ${CONNECT_SRC}; ${WORKER_SRC}";
        }

        add_header X-XSS-Protection "1; mode=block";
        include dgg_csp.conf;


        fastcgi_pass  website:9000;
        fastcgi_index index.php;
        include       fastcgi.conf;
    }
}

# This server block allows testing Bluesky integration in development
# environments.
server {
    # Localtunnel does not support HTTPS passthrough, so we must allow HTTP.
    listen 8083;
    server_name 127.0.0.1;

    root /www/www.destiny.gg/public;

    # Allow access to bundled images over the tunnel for use as the logo URI in
    # the in client metadata file.
    location ^~ /img/ {
        root /www/www.destiny.gg/static;
        try_files $uri =404;
    }

    # Allow application code to generate and serve the client metadata file.
    location = /bluesky/client-metadata.json {
        include fastcgi.conf;
        fastcgi_param SCRIPT_FILENAME $document_root/index.php;
        fastcgi_pass website:9000;
    }

    # Redirect all other requests to HTTPS on `localhost`. This facilitates the
    # OAuth process, which will redirect the user to the tunnel after the
    # application is authorized.
    location / {
        return 302 https://localhost:8080$request_uri;
    }
}
